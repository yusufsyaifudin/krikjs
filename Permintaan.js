'use strict';


/**
 * Constructor
 */
function Permintaan() {

}

Permintaan.prototype.getSource = function(request_options, is_generated_by_server) {
	var request = require('request');
	var Promise = require('promise');

	var source; // returned source


	if(is_generated_by_server === undefined) {
		is_generated_by_server = true;
	} else {
		is_generated_by_server = is_generated_by_server;
	}

	// if static content, it mean that html generated by server, so it can requested by `request` package
	if(is_generated_by_server) {
		request(request_options, function (error, response, body) {
	        if (!error && response.statusCode == 200) {
	        	source = body;
	        } 

	        // source must be undefined at here
	    });
	} else {

		// if page generated by DOM, i.e: angular, ember, vue, react, or etc
		// use phantom to request. But this feature limited just using GET method.
		var phantom;
		var phridge = require('phridge');

		// spawn a new PhantomJS process
		phridge.spawn()
		.then(function (ph) {
			phantom = ph;
			return phantom.openPage(request_options.url);
		})
		.then(function (page) {
			return page.run(function () {
		    	return this.content; // this function runs inside PhantomJS with this bound to a webpage instance
		    });
		})
		.then(function (content) {
			source = content;
			phantom.dispose(); // terminates the process cleanly
		});
	}

    while(source === undefined) {
      require('deasync').runLoopOnce();
    }

    // console.log(source);

    return new Promise(function (fulfill, reject){
    	if (source !== undefined) {
    		fulfill(source);
    	} else {
    		reject();
    	}
    });
};


module.exports = Permintaan;
